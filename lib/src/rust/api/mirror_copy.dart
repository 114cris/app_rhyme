// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

class MusicInfo {
  final PlatformInt64 id;
  final String source;
  final String name;
  final List<String> artist;
  final int? duration;
  final String? album;
  final List<Quality> qualities;
  final Quality? defaultQuality;
  final String? artPic;
  final String? lyric;

  const MusicInfo({
    required this.id,
    required this.source,
    required this.name,
    required this.artist,
    this.duration,
    this.album,
    required this.qualities,
    this.defaultQuality,
    this.artPic,
    this.lyric,
  });

  @override
  int get hashCode =>
      id.hashCode ^
      source.hashCode ^
      name.hashCode ^
      artist.hashCode ^
      duration.hashCode ^
      album.hashCode ^
      qualities.hashCode ^
      defaultQuality.hashCode ^
      artPic.hashCode ^
      lyric.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is MusicInfo &&
          runtimeType == other.runtimeType &&
          id == other.id &&
          source == other.source &&
          name == other.name &&
          artist == other.artist &&
          duration == other.duration &&
          album == other.album &&
          qualities == other.qualities &&
          defaultQuality == other.defaultQuality &&
          artPic == other.artPic &&
          lyric == other.lyric;
}

class MusicList {
  final String name;
  final String artPic;
  final String desc;

  const MusicList({
    required this.name,
    required this.artPic,
    required this.desc,
  });

  @override
  int get hashCode => name.hashCode ^ artPic.hashCode ^ desc.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is MusicList &&
          runtimeType == other.runtimeType &&
          name == other.name &&
          artPic == other.artPic &&
          desc == other.desc;
}

class Quality {
  final String short;
  final String? level;
  final int? bitrate;
  final String? format;
  final String? size;

  const Quality({
    required this.short,
    this.level,
    this.bitrate,
    this.format,
    this.size,
  });

  @override
  int get hashCode =>
      short.hashCode ^
      level.hashCode ^
      bitrate.hashCode ^
      format.hashCode ^
      size.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is Quality &&
          runtimeType == other.runtimeType &&
          short == other.short &&
          level == other.level &&
          bitrate == other.bitrate &&
          format == other.format &&
          size == other.size;
  factory Quality.fromObject(dynamic obj) {
    return Quality(
      short: obj['short'],
      level: obj['level'],
      bitrate: obj['bitrate'],
      format: obj['format'],
      size: obj['size'],
    );
  }
}
